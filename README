
# My octave

## General description

	The problem is addressed by creating an array of matrices, utilizing dynamic memory allocation to store matrices inputted from the keyboard. To retain matrix dimensions, a two-dimensional vector is established with 2 columns and a number of lines equivalent to the matrices read. The first column on line X denotes the number of lines, while the second column contains the number of columns for the Xth matrix in the read list. Keyboard commands are processed one at a time until the "Q" command appears. Specific functions are employed based on the command to accomplish the required tasks.

## Commands

	For the "L" command, a new matrix is read and added to the existing list. Memory allocation is adjusted, and the new matrix is added along with its dimensions. The count of matrices in the list is then incremented.

	The "F" command involves removing a matrix from the list, and a function is used to free the allocated memory for the specified matrix and its dimensions. Subsequently, matrices and dimensions from the position following the specified index to the end are shifted one position to the left.

	The "D" command, when invoked, displays the columns of a matrix specified by its index, using the two-dimensional vector with dimensions.

	The "P" command is executed by a function that reads the index of the array to display. Elements of the desired matrix are displayed using the array of matrices and the dimensions matrix.

	For the "C" command, the function reads the index of the matrix to resize. It further reads the desired number of lines and columns, saving their indices in dynamically allocated arrays. If the matrix exists in the list, a new matrix with resized dimensions is dynamically allocated, and elements of the original matrix are reordered according to the specified indices. The original matrix's memory is then freed, and the resized matrix is added in its place.

	The "M" command involves reading two indices, checking matrix existence and compatibility for multiplication. A new matrix is dynamically allocated to hold the multiplication result, and memory is reallocated for the array of matrices and the two-dimensional vector.

	The "O" command arranges matrices in ascending order based on the sum of elements % 10007, using pointer interchange for matrices and static interchange for dimensions.

	The "T" command reads the index of a matrix and, if it exists, modifies it to store its transpose. Memory is dynamically allocated for the transpose, and the original matrix's memory is freed.

	For the "R" command, the index of an array and the desired power are read. A function checks for matrix existence and quadratic nature. If met, a new matrix raised to the power is constructed, replacing the original matrix. The matrix raising to power function operates in logarithmic time.

	The "S" command reads two indices and multiplies matrices using Strassen's algorithm, a recursive function employing the Divide and Conquer method. The resulting matrix is added to the end of the matrix array.

	Upon the "Q" command, all memory occupied by the array of matrices and the two-dimensional matrix of dimensions is freed. If the keyboard input does not match any command, the system ignores the input and displays an appropriate message.